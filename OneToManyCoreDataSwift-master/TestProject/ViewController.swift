import UIKit
import CoreData

class ViewController: UIViewController {
    
    @IBOutlet weak var lblPassportdetails: UILabel!
    @IBOutlet weak var lblVehicalDetails: UILabel!
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        oneToManyExample()
    }
    
    func oneToManyExample(){
        /*insert start here*/
            let appD = UIApplication.shared.delegate as! AppDelegate
            let context = appD.persistentContainer.viewContext
            
            let person = Person(context: context)
            person.firstName = "Janesh"
            person.lastName = "Suthar"
            
            let marutiModel = Vehicals(context : context)
            marutiModel.companyName = "Maruti"
            
            let marutiVehical1 = CarModel(context : context)
            marutiVehical1.carModelName = "Swift"
            
            let marutiVehical2 = CarModel(context : context)
            marutiVehical2.carModelName = "Waganor"
            
            marutiModel.addToVehicalModel(marutiVehical1)
            marutiModel.addToVehicalModel(marutiVehical2)
        
      
        
   
        let toyotaVehical = Vehicals(context : context)
        toyotaVehical.companyName = "Toyota"
        
        
        let toyotaModel1 = CarModel(context : context)
        toyotaModel1.carModelName = "Inova"
        
        let toyotaModel2 = CarModel(context : context)
        toyotaModel2.carModelName = "Liva"
        toyotaVehical.addToVehicalModel(toyotaModel1)
        toyotaVehical.addToVehicalModel(toyotaModel2)
        
        
        
        
       
        
        /*when we create relationships, in visual editor, xcode autogenerated this method - addToVehicals*/
        person.addToVehicals(marutiModel)
        person.addToVehicals(toyotaVehical)
        
        
        appD.saveContext()
        /*insert ends here*/
        
        /*fetch data from core data to get value*/
        let request = NSFetchRequest<NSFetchRequestResult>(entityName: "Person")
        
        do{
            let res = try context.fetch(request)//array of object [Person]
            
            var aArray = [String]()
            
            /*fetch result can have more than one person objects*/
            for aPerson in res {
                let obj = aPerson as! Person
                /*a person can have more than one vehicals*/
                for item in obj.vehicals! {
                    let a = item as! Vehicals
                    let companyName = a.companyName
                    aArray.append(companyName!)

                    for itemData in a.vehicalModel! {
                        let sample = itemData as! CarModel
                        print("Company Name",companyName, sample.carModelName)
                    }
                }
            }
            
           // print(person)
            
            lblVehicalDetails.text = ("One to many example -> Person \(person.firstName ?? "") \(person.lastName ?? "") \(aArray.description)")
            
        }catch let error{
            print(error)
        }
        
    }
    
}

//*


//var dempcc: [String: [String:[String:Any]]] = [
//    "documents":[
//        "F1.pdf":[
//            "page":"1"
//        ],
//        "F2.pdf":[
//            "page":2
//        ]
//    ]
//]
//
//
//dempcc["documents"] = [
//    "F1.pdf":[
//        "page":"1"
//    ],
//    "F2.pdf":[
//        "page":2
//    ]
//]
//
//
////
////
////
//var testDictionary:[[String:String]] =
//
//    [["documentName": "F1.pdf" ,"pageNumber":"1"],
//     ["documentName": "F2.pdf" ,"pageNumber":"2"],
//     ["documentName": "F1.pdf" ,"pageNumber":"3"],
//     ["documentName": "F2.pdf" ,"pageNumber":"4"]]
//
//var documentNameArray:[String] = []
//print("test dictionary count---",testDictionary.count)
//var sortedDictionary:[String:String] = [:]
//
//for sampleDict in testDictionary {
//    if !documentNameArray.contains(sampleDict["documentName"]!) {
//        documentNameArray.append(sampleDict["documentName"]!)
//    }
//}
//
//print(documentNameArray)
//
//var customSortedDictionary:[[String:String]] = []
//
//for value in testDictionary {
//    if value["documentName"] == "F1.pdf" {
//        customSortedDictionary.append(value)
//    }
//}
//
//print("customSortedDictionary--",customSortedDictionary)



//
